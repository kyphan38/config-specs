pipeline {
  agent any

  parameters {

    choice(
      name: 'ACTION',
      choices: ['get', 'put'],
      description: 'Select an action'
    )

    activeChoiceHtml(
      name: 'SECRET_KEY',
      choiceType: 'ET_FORMATTED_HTML',
      referencedParameters: 'ACTION',
      script: [
        $class: 'GroovyScript',
        script: [
          classpath: [],
          sandbox: true,
          script: '''
            if (ACTION.equals("put")) {
              return "<input name='SECRET_KEY' value='' class='setting-input' type='text'>"
            }
            return ""
          '''
        ]
      ],
      fallbackScript: [
        $class: 'GroovyScript',
        script: [
          classpath: [],
          sandbox: true,
          script: '''
            return "<p>Error rendering SECRET_KEY input field</p>"
          '''
        ]
      ]
    )

    activeChoiceHtml(
      name: 'SECRET_VALUE',
      choiceType: 'ET_FORMATTED_HTML',
      referencedParameters: 'ACTION',
      script: [
        $class: 'GroovyScript',
        script: [
          classpath: [],
          sandbox: true,
          script: '''
            if (ACTION.equals("put")) {
              return "<input name='SECRET_VALUE' value='' class='setting-input' type='text'>"
            }
            return ""
          '''
        ]
      ],
      fallbackScript: [
        $class: 'GroovyScript',
        script: [
          classpath: [],
          sandbox: true,
          script: '''
            return "<p>Error rendering SECRET_VALUE input field</p>"
          '''
        ]
      ]
    )

    activeChoiceHtml(
      name: 'SECRET_PATH',
      choiceType: 'ET_FORMATTED_HTML',
      referencedParameters: 'ACTION',
      script: [
        $class: 'GroovyScript',
        script: [
          classpath: [],
          sandbox: true,
          script: '''
            if (ACTION.equals("get")) {
              return "<input name='SECRET_PATH' value='' class='setting-input' type='text'>"
            }
            return ""
          '''
        ]
      ],
      fallbackScript: [
        $class: 'GroovyScript',
        script: [
          classpath: [],
          sandbox: true,
          script: '''
            return "<p>Error rendering SECRET_PATH input field</p>"
          '''
        ]
      ]
    )
  }

  stages {
    stage('Build') {
      steps {
        echo "Display ACTION: ${params.ACTION}"
        echo "Display SECRET_PATH: ${params.SECRET_PATH}"
        echo "Display SECRET_KEY: ${params.SECRET_KEY}"
        echo "Display SECRET_VALUE: ${params.SECRET_VALUE}"
      }
    }
  }
}

    // Option 1
    // activeChoice(
    //   name: 'States',
    //   description: 'Select a state option',
    //   choiceType: 'PT_SINGLE_SELECT',
    //   script: [
    //     $class: 'GroovyScript',
    //     script: [
    //       classpath: [],
    //       sandbox: true,
    //       script:
    //         'return ["A_State", "B_State"]'
    //     ],
    //     fallbackScript: [
    //       classpath: [],
    //       sandbox: true,
    //       script:
    //         'return ["Error for States"]'
    //     ]
    //   ]
    // )
    
    // Option 2
    // choice (
    //   name: 'States',
    //   choices: ["A_State", "B_State"],
    //   description: 'Select a state option'
    // )

    // activeChoiceHtml(
    //   name: 'Cities',
    //   description: 'Select a city option',
    //   choiceType: 'ET_FORMATTED_HTML',
    //   referencedParameters: 'States', 
    //   script: [
    //     $class: 'GroovyScript',
    //     script: [
    //       classpath: [],
    //       sandbox: true,
    //       script:  // equals or == accepted
    //       '''
    //         if (States.equals("A_State")) {
    //           return "<input name='Cities_A' value='N/A' class='setting-input' type='text'>"
    //         }
    //         else if (States.equals("B_State")) {
    //           return "<input name='Cities_B' value='N/A' class='setting-input' type='text'>"
    //         }
    //       '''
    //     ],
    //     fallbackScript: [
    //       classpath: [],
    //       sandbox: true,
    //       script:
    //         'return "<p>error</p>"'
    //     ]
    //   ]
    // )

    // reactiveChoice(
    //   name: 'Cities',
    //   description: 'Select a city option',
    //   choiceType: 'PT_SINGLE_SELECT',
    //   referencedParameters: 'States', 
    //   script: [
    //     $class: 'GroovyScript',
    //     script: [
    //       classpath: [],
    //       sandbox: true,
    //       script:
    //         '''
    //           if (States.equals("A_State")) {
    //             return ["A_Cities1","A_Cities2","A_Cities3","A_Cities4","A_Cities5","A_Cities6"]
    //           }
    //           else if (States.equals("B_State")) {
    //             return ["B_Cities1","B_Cities2","B_Cities3","B_Cities4"]
    //           }
    //         '''
    //     ],
    //     fallbackScript: [
    //       classpath: [],
    //       sandbox: true,
    //       script:
    //         'return ["Error for Cities"]'
    //     ]
    //   ]
    // )