// List security groups
aws ec2 describe-instances --filters "Name=private-ip-address,Values=10.16.60.226" --output text --query "Reservations[*].Instances[*].SecurityGroups[*].GroupId" --dry-run

// => Output: sg-00fbf4a9cfccedc8b sg-0e410f53dbf5230a4

aws ec2 describe-security-groups --filter --group-ids $group --query "SecurityGroups[*].Tags[*]" --output text

sshRule='[
  {
    "IpProtocol": "tcp",
    "FromPort": 22,
    "ToPort": 22,
    "IpRanges": [
      {
        "CidrIp": "10.16.0.0/16",
        "Description": "Testing"
      }
    ]
  }
]'

aws ec2 authorize-security-group-ingress --group-id sg-0bf8de7b0ac4b3f40 --ip-permissions "$sshRule" &>/dev/null || true

//

sshRule='[
  {
    "IpProtocol": "tcp",
    "FromPort": 22,
    "ToPort": 22,
    "IpRanges": [
      {
        "CidrIp": "10.16.0.0/16",
        "Description": "Testing"
      }
    ]
  }
]'

output=$(aws ec2 authorize-security-group-ingress --group-id sg-0bf8de7b0ac4b3f40 --ip-permissions "$sshRule" 2>&1)
exit_status=$?

# Check the exit status
if [ $exit_status -eq 0 ]; then
  echo "Adding successfully"
else
  echo "Error occurred: $output"
fi


// S3
test-s3-52j12

// Get secret manager

